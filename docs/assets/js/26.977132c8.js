(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{381:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ro同vim的交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ro同vim的交互"}},[t._v("#")]),t._v(" RO同VIM的交互")]),t._v(" "),a("p",[t._v("在创建或者销毁NS实例(Network Service Instance)过程中，RO需要同VIM进行多次交互，以查找、创建或者销毁NS实例依赖的资源。\n资源之间存在的依赖关系，会导致相应的交互动作之间也存在同样的依赖关系， 比如：创建虚拟机前，就需要创建镜像、网络等交互已经成功完成。")]),t._v(" "),a("p",[t._v("这里详细说明RO内部如何实现同VIM的交互。")]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h3",{attrs:{id:"instance-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance-actions"}},[t._v("#")]),t._v(" "),a("code",[t._v("instance_actions")])]),t._v(" "),a("p",[t._v("编排动作（创建或者删除）一般都涉及到同VIM的多次交互，为了跟踪编排动作中多个交互的执行情况，我们为每个编排动作都创建一个对应的\n"),a("code",[t._v("instance_actoins")]),t._v("对象。")]),t._v(" "),a("p",[t._v("这个对象在接收到客户端的请求时创建，并会返回对象的Id给客户端。客户端则可以根据对象的Id，查询对应编排动作的执行进度和结果。")]),t._v(" "),a("h3",{attrs:{id:"vim-wim-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-wim-actions"}},[t._v("#")]),t._v(" "),a("code",[t._v("vim_wim_actions")])]),t._v(" "),a("p",[t._v("RO和VIM的交互在系统内部对应一个任务对象，称之为"),a("code",[t._v("vim_wim_actions")]),t._v("。它包含以下重要属性。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("instance_action_id")]),t._v(" "),a("td",[t._v("任务所属的Action")])]),t._v(" "),a("tr",[a("td",[t._v("task_index")]),t._v(" "),a("td",[t._v("任务在Action中的序号")])]),t._v(" "),a("tr",[a("td",[t._v("vim_id")]),t._v(" "),a("td",[t._v("任务对应的资源对象在VIM中的Id")])]),t._v(" "),a("tr",[a("td",[t._v("item")]),t._v(" "),a("td",[t._v("任务对应的资源对象类型")])]),t._v(" "),a("tr",[a("td",[t._v("item_id")]),t._v(" "),a("td",[t._v("任务对应的资源对象在RO中的Id")])]),t._v(" "),a("tr",[a("td",[t._v("status")]),t._v(" "),a("td",[t._v("任务的状态")])]),t._v(" "),a("tr",[a("td",[t._v("extra")]),t._v(" "),a("td",[t._v("任务的参数以及本任务所依赖的其他任务")])]),t._v(" "),a("tr",[a("td",[t._v("error_msg")]),t._v(" "),a("td",[t._v("任务执行中捕获的错误")])])])]),t._v(" "),a("p",[t._v("任务状态主要包括：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("SCHEDULED")])])]),t._v(" "),a("blockquote",[a("p",[t._v("任务的初始状态")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BUILT")])])]),t._v(" "),a("blockquote",[a("p",[t._v("任务已完成")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("FAILED")])])]),t._v(" "),a("blockquote",[a("p",[t._v("任务失败")])]),t._v(" "),a("h2",{attrs:{id:"任务的创建、分发和执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务的创建、分发和执行"}},[t._v("#")]),t._v(" 任务的创建、分发和执行")]),t._v(" "),a("p",[t._v("RO在接收到编排请求后，创建该请求中所有涉及的任务并保存到数据库中，此时，任务尚未开始执行。")]),t._v(" "),a("p",[t._v("每个任务都会被设置一个租户属性("),a("code",[t._v("tenants_datacenters")]),t._v("），表示该任务将同对应租户所在的Site交互。")]),t._v(" "),a("p",[t._v("由于不同site的任务之间不存在依赖关系，为了提高效率，RO为每个site都创建一个独立线程("),a("code",[t._v("vim_thread")]),t._v("）。\n该线程定期从数据库轮询需要执行的任务，根据任务类型、参数同vim交互。")]),t._v(" "),a("p",[t._v("任务执行成功后，一般会从vim得到一个资源的id，"),a("code",[t._v("vim_thread")]),t._v("负责将该id回填到系统对应的资源对象中。\n任务执行失败，"),a("code",[t._v("vim_thread")]),t._v("仅仅是记录了相关错误，并未执行其他处理（比如：回滚).")]),t._v(" "),a("h3",{attrs:{id:"related"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related"}},[t._v("#")]),t._v(" related")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("vim_thread")]),t._v("的代码中，我们看到task有"),a("code",[t._v("related")]),t._v("字段，根据代码，可以看出该字段记录了task所关联的资源。\n为了防止同时执行对同一个资源的多个操作，"),a("code",[t._v("vim_thread")]),t._v("每次在轮询得到一个任务后，把所有相关的任务("),a("code",[t._v("related")]),t._v("字段相同)都锁定，\n执行完后再释放锁。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lock ...")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update_rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vim_wim_actions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UPDATE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("my_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" modified_time"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    WHERE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target_k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target_v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SCHEDULED'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BUILD'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DONE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FAILED'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("my_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"related"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" task_related"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("但是task中已经有"),a("code",[t._v("item_id")]),t._v("记录Task对应的资源，两者之间什么关系？")])])]),t._v(" "),a("h2",{attrs:{id:"vim-connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-connection"}},[t._v("#")]),t._v(" VIM Connection")]),t._v(" "),a("p",[t._v("RO为了和不同类型的VIM交互，定义了一套统一的交互模型，详细接口可以参见"),a("code",[t._v("vimconn.py")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);
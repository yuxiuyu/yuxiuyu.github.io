(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{372:function(a,t,r){"use strict";r.r(t);var s=r(42),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"juju"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#juju"}},[a._v("#")]),a._v(" Juju")]),a._v(" "),r("p",[a._v("Juju是Ubuntu提供的开源软件，目的是简化云环境下应用的部署和运行管理。")]),a._v(" "),r("h2",{attrs:{id:"why-juju"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-juju"}},[a._v("#")]),a._v(" Why Juju")]),a._v(" "),r("h3",{attrs:{id:"multi-cloud-suppor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multi-cloud-suppor"}},[a._v("#")]),a._v(" Multi-cloud suppor")]),a._v(" "),r("p",[a._v("Juju提供了工具和运行环境，屏蔽不同云环境("),r("code",[a._v("K8S")]),a._v(", "),r("code",[a._v("OpentStack")]),a._v(", "),r("code",[a._v("Bare metal")]),a._v(", "),r("code",[a._v("Amazon")]),a._v(", "),r("code",[a._v("Azure")]),a._v(")的差异，使我们可以用一种通用的方式执行应用部署、配置、扩容以及其他相关任务。")]),a._v(" "),r("h3",{attrs:{id:"集群管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#集群管理"}},[a._v("#")]),a._v(" 集群管理")]),a._v(" "),r("p",[a._v("当系统由多个不同应用/微服务/组件构成时，Juju支持我们定义应用之间的依赖关系，并在在不同的运行环境中根据依赖关系建立和维护多个应用实例构成的集群。")]),a._v(" "),r("h3",{attrs:{id:"infrastrure-as-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#infrastrure-as-code"}},[a._v("#")]),a._v(" Infrastrure as code")]),a._v(" "),r("p",[a._v("Juju基于"),r("code",[a._v("Infrastructure as code (IaC)")]),a._v("的理念实现，通过执行用户定义的代码，自动完成应用的部署和其他操作，")]),a._v(" "),r("p",[a._v("Juju提供的编程模型，支持定义复杂的编排过程。通过Juju，我们可以在多个云环境中重用这些代码，使用统一的方式完成应用的部署、配置等任务。")]),a._v(" "),r("h3",{attrs:{id:"开源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开源"}},[a._v("#")]),a._v(" 开源")]),a._v(" "),r("p",[a._v("Juju是开源并免费的产品，由于它支持基于K8s完成应用的部署和服务的编排，所以它为K8S环境的用户提供了"),r("code",[a._v("OpenShift")]),a._v("之外的另一个选项。")]),a._v(" "),r("h2",{attrs:{id:"核心概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[a._v("#")]),a._v(" 核心概念")]),a._v(" "),r("h3",{attrs:{id:"application"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#application"}},[a._v("#")]),a._v(" Application")]),a._v(" "),r("p",[a._v("在Juju环境中，"),r("code",[a._v("Application")]),a._v("指可以被独立部署的软件，比如：redis、apache、hadoop等。但是，Juju中的Applicatiion和我们在其他时候谈论的Application有所不同，比如，juju中的redis应用除了包含可以被部署的redis软件介质外，还包含了其他组件，以支持juju等该软件的自动管理（部署、配置等）。")]),a._v(" "),r("p",[a._v("除了Juju中应用的含义更丰富外，"),r("code",[a._v("Application")]),a._v("还有以下特点：")]),a._v(" "),r("h4",{attrs:{id:"应用可以被部署多个实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用可以被部署多个实例"}},[a._v("#")]),a._v(" 应用可以被部署多个实例")]),a._v(" "),r("p",[a._v("实例被称为"),r("code",[a._v("Unit")]),a._v("，不同Unit可能位于不同机器中。")]),a._v(" "),r("h4",{attrs:{id:"应用有一定智能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用有一定智能"}},[a._v("#")]),a._v(" 应用有一定智能")]),a._v(" "),r("p",[a._v("Juju中的应用可以根据不同状态，主动从juju应用环境中获取需要的信息或者配置。这个过程不需要人工干预。")]),a._v(" "),r("h4",{attrs:{id:"应用可被管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用可被管理"}},[a._v("#")]),a._v(" 应用可被管理")]),a._v(" "),r("p",[a._v("Juju应用维护了运行状态和运行指标供外部查询，还提供了特定的action接口供外部调用。")]),a._v(" "),r("p",[a._v("常见的应用action包括：")]),a._v(" "),r("h5",{attrs:{id:"配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[a._v("#")]),a._v(" 配置")]),a._v(" "),r("p",[a._v("在编写charm时，我们可以定义部署或运行时设置的配置参数。这样，当我们在juju上部署应用时，可以设置相应的参数；也可以在应用部署后，修改配置参数。")]),a._v(" "),r("h5",{attrs:{id:"部署"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[a._v("#")]),a._v(" 部署")]),a._v(" "),r("h5",{attrs:{id:"关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关联"}},[a._v("#")]),a._v(" 关联")]),a._v(" "),r("p",[a._v("应用之间的关联关系实际上就是应用之间的依赖关系。通过这种关系，上下游应用可以执行某种通信，通信的内容以及每次通信触发的功能则完全由charm决定。")]),a._v(" "),r("h5",{attrs:{id:"删除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),r("h5",{attrs:{id:"扩容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩容"}},[a._v("#")]),a._v(" 扩容")]),a._v(" "),r("h5",{attrs:{id:"升级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#升级"}},[a._v("#")]),a._v(" 升级")]),a._v(" "),r("h3",{attrs:{id:"charm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#charm"}},[a._v("#")]),a._v(" Charm")]),a._v(" "),r("p",[a._v("上面提到的Juju应用的管理以及其他智能特性，并不是原生应用提供的，也不是juju自动生成的，而是由用户通过charm技术，使用代码的方式实现的。")]),a._v(" "),r("p",[a._v("用户按照一定的方式，编写了代码逻辑后，通过juju提供的工具，生成charm，提交到官方或者私有的charm仓库。")]),a._v(" "),r("p",[a._v("部署时，我们指定使用的charm，juju从仓库中下载charm，然后将其中的原生软件部署到云，然后启动一个对应的agent，负责对原生软件的监视和管理。所有的管理请求，实际上是转发到该agent。")]),a._v(" "),r("h3",{attrs:{id:"model"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[a._v("#")]),a._v(" Model")]),a._v(" "),r("h3",{attrs:{id:"relation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#relation"}},[a._v("#")]),a._v(" Relation")]),a._v(" "),r("h2",{attrs:{id:"how-doest-it-work"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-doest-it-work"}},[a._v("#")]),a._v(" How doest it work")]),a._v(" "),r("h3",{attrs:{id:"architecture"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[a._v("#")]),a._v(" Architecture")]),a._v(" "),r("h3",{attrs:{id:"controller"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[a._v("#")]),a._v(" Controller")])])}),[],!1,null,null,null);t.default=e.exports}}]);